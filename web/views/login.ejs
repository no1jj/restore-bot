<!DOCTYPE html>
<html lang="ko" data-theme="dark">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Í¥ÄÎ¶¨Ïûê Î°úÍ∑∏Ïù∏</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        :root {
            --bg-gradient: linear-gradient(to bottom right, #1e1e2f, #2c2c3c);
            --container-bg: rgba(35, 35, 50, 0.8);
            --border-color: rgba(255, 255, 255, 0.1);
            --text-color: #e4e4e4;
            --heading-color: #61dafb;
            --input-bg: rgba(45, 45, 65, 0.7);
            --button-gradient: linear-gradient(45deg, #3a7bd5, #4889e3);
            --button-hover-gradient: linear-gradient(45deg, #4889e3, #5a9cf2);
            --error-color: #ff5757;
            --success-color: #4cd964;
        }

        html[data-theme="light"] {
            --bg-gradient: linear-gradient(to bottom right, #ffffff, #fdf1ec);
            --container-bg: rgba(255, 255, 255, 0.85);
            --border-color: rgba(0, 0, 0, 0.05);
            --text-color: #333333;
            --heading-color: #ff7d45;
            --input-bg: rgba(245, 245, 245, 0.9);
            --button-gradient: linear-gradient(45deg, #ff7d45, #ffa270);
            --button-hover-gradient: linear-gradient(45deg, #ffa270, #ffb391);
            --error-color: #dc3545;
            --success-color: #28a745;
        }

        body {
            font-family: 'Poppins', 'Noto Sans KR', sans-serif;
            margin: 0;
            padding: 0;
            height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            background: var(--bg-gradient);
            color: var(--text-color);
            transition: all 0.3s ease;
        }

        .container {
            background-color: var(--container-bg);
            border-radius: 20px;
            padding: 40px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            text-align: center;
            width: 100%;
            max-width: 400px;
            backdrop-filter: blur(5px);
            transform: translateY(0);
            animation: float 8s ease-in-out infinite;
            border: 2px solid var(--border-color);
            transition: all 0.3s ease;
        }

        @keyframes float {
            0% { transform: translateY(0px); }
            50% { transform: translateY(-10px); }
            100% { transform: translateY(0px); }
        }

        .login-icon {
            font-size: 60px;
            margin-bottom: 20px;
            animation: pulse 3s infinite;
        }

        @keyframes pulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.1); }
            100% { transform: scale(1); }
        }

        h1 {
            color: var(--heading-color);
            font-size: 2.2rem;
            margin-bottom: 25px;
            font-weight: 700;
            transition: color 0.3s ease;
        }

        .form-group {
            margin-bottom: 20px;
            text-align: left;
        }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
        }

        .form-control {
            width: 100%;
            padding: 12px 15px;
            border: 1px solid var(--border-color);
            border-radius: 8px;
            font-size: 1rem;
            background-color: var(--input-bg);
            color: var(--text-color);
            transition: all 0.3s ease;
            box-sizing: border-box;
        }

        .form-control:focus {
            outline: none;
            border-color: var(--heading-color);
            box-shadow: 0 0 0 2px rgba(97, 218, 251, 0.2);
        }

        .btn-login {
            display: inline-block;
            background: var(--button-gradient);
            color: white;
            text-decoration: none;
            padding: 12px 25px;
            border-radius: 50px;
            font-weight: 600;
            transition: all 0.3s ease;
            margin-top: 10px;
            border: none;
            cursor: pointer;
            width: 100%;
            font-size: 1rem;
        }

        .btn-login:hover {
            transform: translateY(-3px);
            box-shadow: 0 6px 12px rgba(58, 123, 213, 0.4);
            background: var(--button-hover-gradient);
        }

        .theme-toggle {
            position: absolute;
            top: 20px;
            right: 20px;
            background: none;
            border: none;
            font-size: 24px;
            cursor: pointer;
            color: var(--text-color);
            transition: transform 0.3s ease;
            z-index: 100;
        }

        .theme-toggle:hover {
            transform: rotate(30deg);
        }

        .message {
            margin-bottom: 15px;
            font-size: 0.9rem;
            text-align: center;
            padding: 10px;
            border-radius: 8px;
            animation: fadeOut 5s forwards;
        }

        @keyframes fadeOut {
            0% { opacity: 1; }
            70% { opacity: 1; }
            100% { opacity: 0.7; }
        }

        .error-message {
            color: white;
            background-color: var(--error-color);
        }

        .success-message {
            color: white;
            background-color: var(--success-color);
        }

        .back-link {
            display: inline-block;
            margin-top: 20px;
            color: var(--text-color);
            text-decoration: none;
            font-size: 0.9rem;
            transition: color 0.3s ease;
        }

        .back-link:hover {
            color: var(--heading-color);
        }
    </style>
</head>
<body>
    <button class="theme-toggle" id="themeToggle">üåì</button>
    <div class="container">
        <div class="login-icon">üîê</div>
        <h1>Í¥ÄÎ¶¨Ïûê Î°úÍ∑∏Ïù∏</h1>
        
        <% if (locals.success_messages && success_messages.length > 0) { %>
        <div class="message success-message">
            <i class="fas fa-check-circle"></i> <%= success_messages[0] %>
        </div>
        <% } %>
        
        <% if (locals.error_messages && error_messages.length > 0) { %>
        <div class="message error-message">
            <i class="fas fa-exclamation-circle"></i> <%= error_messages[0] %>
        </div>
        <% } else if (locals.error) { %>
        <div class="message error-message">
            <i class="fas fa-exclamation-circle"></i> <%= error %>
        </div>
        <% } %>
        
        <form action="/login" method="POST">
            <input type="hidden" name="_csrf" value="<%= csrfToken %>">
            
            <div class="form-group">
                <label for="username">ÏïÑÏù¥Îîî</label>
                <input type="text" id="username" name="username" class="form-control" required autocomplete="username">
            </div>
            
            <div class="form-group">
                <label for="password">ÎπÑÎ∞ÄÎ≤àÌò∏</label>
                <input type="password" id="password" name="password" class="form-control" required autocomplete="current-password">
            </div>
            
            <button type="submit" class="btn-login">Î°úÍ∑∏Ïù∏</button>
        </form>
        
        <a href="/" class="back-link">
            <i class="fas fa-arrow-left"></i> ÌôàÏúºÎ°ú ÎèåÏïÑÍ∞ÄÍ∏∞
        </a>
    </div>

    <script>
        const themeToggle = document.getElementById('themeToggle');
        const html = document.documentElement;
        
        const savedTheme = localStorage.getItem('theme');
        if (savedTheme) {
            html.setAttribute('data-theme', savedTheme);
            updateToggleIcon(savedTheme);
        }
        
        themeToggle.addEventListener('click', () => {
            const currentTheme = html.getAttribute('data-theme');
            const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
            
            html.setAttribute('data-theme', newTheme);
            localStorage.setItem('theme', newTheme);
            updateToggleIcon(newTheme);
        });
        
        function updateToggleIcon(theme) {
            themeToggle.textContent = theme === 'dark' ? '‚òÄÔ∏è' : 'üåô';
        }
    </script>
</body>
</html> 