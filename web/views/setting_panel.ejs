<!DOCTYPE html>
<html lang="ko" data-theme="dark">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>서버 패널</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        :root {
            --bg-gradient: linear-gradient(to bottom right, #1e1e2f, #2c2c3c);
            --container-bg: rgba(35, 35, 50, 0.9);
            --card-bg: rgba(45, 45, 65, 0.7);
            --text-color: #e4e4e4;
            --heading-color: #61dafb;
            --border-color: rgba(255, 255, 255, 0.1);
            --switch-active: #4cd964;
            --switch-inactive: #8e8e93;
            --button-save: #4568dc;
            --button-danger: #dc4545;
            --success-color: #4cd964;
            --error-color: #ff5757;
            --text-color-rgb: 228, 228, 228;
        }

        html[data-theme="light"] {
            --bg-gradient: linear-gradient(to bottom right, #f7f7f7, #e6f0ff);
            --container-bg: rgba(255, 255, 255, 0.9);
            --card-bg: rgba(255, 255, 255, 0.9);
            --text-color: #333333;
            --heading-color: #3a7bd5;
            --border-color: rgba(0, 0, 0, 0.1);
            --switch-active: #34c759;
            --switch-inactive: #aeaeb2;
            --button-save: #3a7bd5;
            --button-danger: #ff3b30;
            --success-color: #34c759;
            --error-color: #ff3b30;
            --text-color-rgb: 51, 51, 51;
        }

        body {
            font-family: 'Roboto', 'Noto Sans KR', sans-serif;
            margin: 0;
            padding: 0;
            min-height: 100vh;
            background: var(--bg-gradient);
            color: var(--text-color);
            transition: all 0.3s ease;
        }

        .container {
            width: 90%;
            max-width: 1200px;
            margin: 0 auto;
            padding: 30px 0;
        }

        header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
            padding-bottom: 20px;
            border-bottom: 1px solid var(--border-color);
        }

        .logo {
            display: flex;
            align-items: center;
        }

        .logo-icon {
            font-size: 40px;
            margin-right: 15px;
            color: var(--heading-color);
        }

        h1 {
            color: var(--heading-color);
            margin: 0;
            font-size: 2.2rem;
        }

        .user-controls {
            display: flex;
            align-items: center;
        }

        .theme-toggle {
            background: none;
            border: none;
            font-size: 24px;
            cursor: pointer;
            color: var(--text-color);
            margin-right: 20px;
            transition: transform 0.3s ease;
        }

        .theme-toggle:hover {
            transform: rotate(30deg);
        }

        .logout-btn {
            background-color: var(--button-danger);
            color: white;
            border: none;
            padding: 8px 15px;
            border-radius: 6px;
            cursor: pointer;
            font-weight: 500;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            font-size: 0.9rem;
        }

        .logout-btn i {
            margin-right: 6px;
        }

        .logout-btn:hover {
            opacity: 0.9;
            transform: translateY(-2px);
        }

        .server-info {
            background-color: var(--container-bg);
            border-radius: 15px;
            padding: 25px;
            margin-bottom: 30px;
            display: flex;
            align-items: center;
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
            border: 1px solid var(--border-color);
        }

        .server-icon {
            width: 80px;
            height: 80px;
            border-radius: 50%;
            background-color: var(--heading-color);
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 40px;
            margin-right: 25px;
            flex-shrink: 0;
        }

        .server-name {
            font-size: 1.8rem;
            margin: 0 0 10px 0;
            font-weight: 700;
        }

        .server-id {
            color: rgba(var(--text-color-rgb), 0.6);
            font-size: 0.9rem;
            margin: 0;
            font-weight: 500;
        }

        .cards-container {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
            gap: 30px;
            margin-bottom: 40px;
        }

        .card {
            background-color: var(--card-bg);
            border-radius: 15px;
            padding: 25px;
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
            border: 1px solid var(--border-color);
            transition: transform 0.3s ease;
        }

        .card:hover {
            transform: translateY(-5px);
        }

        .card h2 {
            color: var(--heading-color);
            margin-top: 0;
            margin-bottom: 20px;
            font-size: 1.4rem;
            display: flex;
            align-items: center;
        }

        .card h2 i {
            margin-right: 10px;
            font-size: 1.2em;
        }

        .setting-group {
            margin-bottom: 20px;
        }

        .switch-container {
            display: flex;
            align-items: center;
            justify-content: space-between;
            margin-bottom: 15px;
        }

        .switch-label {
            font-weight: 500;
        }

        .switch {
            position: relative;
            display: inline-block;
            width: 50px;
            height: 24px;
        }

        .switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }

        .slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: var(--switch-inactive);
            transition: 0.4s;
            border-radius: 24px;
        }

        .slider:before {
            position: absolute;
            content: "";
            height: 18px;
            width: 18px;
            left: 3px;
            bottom: 3px;
            background-color: white;
            transition: 0.4s;
            border-radius: 50%;
        }

        input:checked + .slider {
            background-color: var(--switch-active);
        }

        input:checked + .slider:before {
            transform: translateX(26px);
        }

        .input-group {
            margin-bottom: 15px;
        }

        .input-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
        }

        .form-control {
            width: 100%;
            padding: 10px 12px;
            border: 1px solid var(--border-color);
            border-radius: 6px;
            background-color: rgba(35, 35, 50, 0.5);
            color: var(--text-color);
            font-size: 0.95rem;
            transition: all 0.3s ease;
            box-sizing: border-box;
            appearance: none;
            -webkit-appearance: none;
            -moz-appearance: none;
        }

        .select-wrapper {
            position: relative;
        }

        .select-wrapper::after {
            content: '\f078';
            font-family: 'Font Awesome 5 Free';
            font-weight: 900;
            position: absolute;
            right: 15px;
            top: 50%;
            transform: translateY(-50%);
            color: var(--text-color);
            pointer-events: none;
        }

        select.form-control {
            padding-right: 30px;
            cursor: pointer;
        }

        select.form-control option {
            background-color: var(--card-bg);
            color: var(--text-color);
        }

        .form-control:focus {
            outline: none;
            border-color: var(--heading-color);
        }

        .role-option {
            display: flex;
            align-items: center;
            padding: 8px 12px;
            margin-bottom: 5px;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.2s;
        }

        .role-color {
            display: inline-block;
            width: 12px;
            height: 12px;
            border-radius: 50%;
            margin-right: 8px;
        }

        .role-name {
            flex-grow: 1;
        }

        .channel-group {
            font-weight: 600;
            opacity: 0.7;
            margin-top: 8px;
        }

        .form-actions {
            display: flex;
            justify-content: flex-end;
            margin-top: 40px;
        }

        .save-btn {
            background-color: var(--button-save);
            color: white;
            border: none;
            padding: 12px 30px;
            font-size: 1rem;
            border-radius: 8px;
            cursor: pointer;
            font-weight: 600;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
        }

        .save-btn i {
            margin-right: 8px;
        }

        .save-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(69, 104, 220, 0.3);
        }

        .message {
            margin-bottom: 20px;
            padding: 15px;
            border-radius: 10px;
            font-weight: 500;
            display: flex;
            align-items: center;
            animation: fadeOut 8s forwards;
        }

        @keyframes fadeOut {
            0% { opacity: 1; }
            70% { opacity: 1; }
            100% { opacity: 0.7; }
        }

        .success-message {
            background-color: var(--success-color);
            color: white;
        }

        .error-message {
            background-color: var(--error-color);
            color: white;
        }

        .message i {
            margin-right: 10px;
            font-size: 1.2em;
        }

        footer {
            text-align: center;
            padding: 30px 0;
            color: rgba(var(--text-color-rgb), 0.7);
            font-size: 0.9rem;
            border-top: 1px solid var(--border-color);
            margin-top: 40px;
        }

        @media (max-width: 768px) {
            .cards-container {
                grid-template-columns: 1fr;
            }

            .server-info {
                flex-direction: column;
                text-align: center;
            }

            .server-icon {
                margin-right: 0;
                margin-bottom: 15px;
            }

            header {
                flex-direction: column;
                text-align: center;
            }

            .logo {
                margin-bottom: 20px;
                justify-content: center;
            }

            .user-controls {
                justify-content: center;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <div class="logo">
                <div class="logo-icon">🔐</div>
                <h1>설정 관리 패널</h1>
            </div>
            <div class="user-controls">
                <button class="theme-toggle" id="themeToggle">🌓</button>
                <a href="/logout" class="logout-btn">
                    <i class="fas fa-sign-out-alt"></i> 로그아웃
                </a>
            </div>
        </header>

        <% if (locals.success_messages && success_messages.length > 0) { %>
        <div class="message success-message">
            <i class="fas fa-check-circle"></i> <%= success_messages[0] %>
        </div>
        <% } %>
        
        <% if (locals.error_messages && error_messages.length > 0) { %>
        <div class="message error-message">
            <i class="fas fa-exclamation-circle"></i> <%= error_messages[0] %>
        </div>
        <% } %>

        <div class="server-info">
            <div class="server-icon">
                <i class="fab fa-discord"></i>
            </div>
            <div>
                <h2 class="server-name"><%= serverInfo.name %></h2>
                <p class="server-id">서버 ID: <%= serverInfo.serverId %></p>
            </div>
        </div>

        <form action="/setting/update" method="POST">
            <input type="hidden" name="_csrf" value="<%= csrfToken %>">
            
            <div class="cards-container">
                <div class="card">
                    <h2><i class="fas fa-shield-alt"></i> 보안 설정</h2>
                    
                    <div class="setting-group">
                        <div class="switch-container">
                            <div class="switch-label">캡차 사용</div>
                            <label class="switch">
                                <input type="checkbox" name="useCaptcha" <%= settings.useCaptcha ? 'checked' : '' %>>
                                <span class="slider"></span>
                            </label>
                        </div>
                        
                        <div class="switch-container">
                            <div class="switch-label">VPN 차단</div>
                            <label class="switch">
                                <input type="checkbox" name="blockVpn" <%= settings.blockVpn ? 'checked' : '' %>>
                                <span class="slider"></span>
                            </label>
                        </div>
                    </div>
                </div>

                <div class="card">
                    <h2><i class="fas fa-user-shield"></i> 권한 설정</h2>
                    
                    <div class="input-group">
                        <label for="roleId">인증 역할</label>
                        <div class="select-wrapper">
                            <select id="roleId" name="roleId" class="form-control">
                                <option value="0">역할 선택 안함</option>
                                <% roles.forEach(role => { %>
                                    <option value="<%= role.id %>" 
                                            <%= settings.roleId === role.id ? 'selected' : '' %>
                                            data-color="<%= role.color %>">
                                        <%= role.name %>
                                    </option>
                                <% }); %>
                            </select>
                        </div>
                    </div>
                    
                    <div id="selectedRole" class="role-preview" style="margin-top: 10px; display: none;">
                        <div class="role-option">
                            <span class="role-color" id="roleColor"></span>
                            <span class="role-name" id="roleName"></span>
                        </div>
                    </div>
                </div>

                <div class="card">
                    <h2><i class="fas fa-history"></i> 로깅 설정</h2>
                    
                    <div class="setting-group">
                        <div class="switch-container">
                            <div class="switch-label">IP 로깅</div>
                            <label class="switch">
                                <input type="checkbox" name="loggingIp" <%= settings.loggingIp ? 'checked' : '' %>>
                                <span class="slider"></span>
                            </label>
                        </div>
                        
                        <div class="switch-container">
                            <div class="switch-label">이메일 로깅</div>
                            <label class="switch">
                                <input type="checkbox" name="loggingMail" <%= settings.loggingMail ? 'checked' : '' %>>
                                <span class="slider"></span>
                            </label>
                        </div>
                    </div>
                    
                    <div class="input-group">
                        <label for="loggingChannelId">로깅 채널</label>
                        <div class="select-wrapper">
                            <select id="loggingChannelId" name="loggingChannelId" class="form-control">
                                <option value="0">채널 선택 안함</option>
                                <% 
                                let lastParent = '';
                                channels.forEach(channel => {
                                    if (lastParent !== channel.parentName) {
                                        lastParent = channel.parentName;
                                        %>
                                        <optgroup label="<%= channel.parentName %>">
                                    <% } %>
                                    
                                    <option value="<%= channel.id %>" 
                                            data-parent="<%= channel.parentName %>"
                                            <%= settings.loggingChannelId === channel.id ? 'selected' : '' %>>
                                        #<%= channel.name %>
                                    </option>
                                    
                                    <% if (channels[channels.indexOf(channel) + 1] && 
                                           channels[channels.indexOf(channel) + 1].parentName !== channel.parentName) { %>
                                        </optgroup>
                                    <% } %>
                                <% }); %>
                            </select>
                        </div>
                        <div id="selectedChannel" class="channel-preview" style="margin-top: 10px; display: none;">
                            <div class="role-option">
                                <span style="color: #7289da; margin-right: 8px;"><i class="fas fa-hashtag"></i></span>
                                <span class="channel-name" id="channelName"></span>
                                <span class="channel-category" id="channelCategory" style="margin-left: 8px; opacity: 0.7; font-size: 0.9em;"></span>
                            </div>
                        </div>
                        <div class="info-text" style="margin-top: 10px; font-size: 0.85rem; opacity: 0.8;">
                            <i class="fas fa-info-circle"></i> 채널을 선택하면 자동으로 웹훅이 생성됩니다.
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-actions">
                <button type="submit" class="save-btn">
                    <i class="fas fa-save"></i> 설정 저장
                </button>
            </div>
        </form>

        <footer>
            &copy; <%= new Date().getFullYear() %> RestoreBot - 모든 권리 보유
        </footer>
    </div>

    <script>
        // 테마 전환 기능
        const themeToggle = document.getElementById('themeToggle');
        const html = document.documentElement;
        
        const savedTheme = localStorage.getItem('theme');
        if (savedTheme) {
            html.setAttribute('data-theme', savedTheme);
            updateToggleIcon(savedTheme);
        }
        
        themeToggle.addEventListener('click', () => {
            const currentTheme = html.getAttribute('data-theme');
            const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
            
            html.setAttribute('data-theme', newTheme);
            localStorage.setItem('theme', newTheme);
            updateToggleIcon(newTheme);
        });
        
        function updateToggleIcon(theme) {
            themeToggle.textContent = theme === 'dark' ? '☀️' : '🌙';
        }
        
        window.onload = function() {
            const roleSelect = document.getElementById('roleId');
            const selectedRole = document.getElementById('selectedRole');
            const roleColor = document.getElementById('roleColor');
            const roleName = document.getElementById('roleName');
            
            
            function updateRolePreview() {
                const selectedOption = roleSelect.options[roleSelect.selectedIndex];
                
                if (selectedOption.value !== '0') {
                    roleColor.style.backgroundColor = selectedOption.dataset.color || '#99aab5';
                    roleName.textContent = selectedOption.textContent.trim();
                    selectedRole.style.display = 'block';
                } else {
                    selectedRole.style.display = 'none';
                }
            }
            
            roleSelect.addEventListener('change', updateRolePreview);
            updateRolePreview();
            
            const channelSelect = document.getElementById('loggingChannelId');
            const selectedChannel = document.getElementById('selectedChannel');
            const channelName = document.getElementById('channelName');
            const channelCategory = document.getElementById('channelCategory');
            
            
            function updateChannelPreview() {
                const selectedOption = channelSelect.options[channelSelect.selectedIndex];
                
                if (selectedOption.value !== '0') {
                    channelName.textContent = selectedOption.textContent.trim();
                    channelCategory.textContent = selectedOption.dataset.parent ? `(${selectedOption.dataset.parent})` : '';
                    selectedChannel.style.display = 'block';
                } else {
                    selectedChannel.style.display = 'none';
                }
            }
            
            channelSelect.addEventListener('change', updateChannelPreview);
            
            updateChannelPreview();
        };
        
        setTimeout(() => {
            const messages = document.querySelectorAll('.message');
            messages.forEach(msg => {
                msg.style.display = 'none';
            });
        }, 8000);
    </script>
</body>
</html> 

<!-- V1.1.1 -->