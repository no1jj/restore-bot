name: Discord Notification

on:
  push:
    branches: ["*"]
    tags: ["v*"]
    paths:
      - 'src/**'
      - 'docs/**'
  pull_request:
    types: [opened, closed, labeled, unlabeled]
    paths:
      - 'src/**'
      - 'docs/**'
  release:
    types: [published]
  issues:
    types: [opened, closed]
  issue_comment:
    types: [created]
  workflow_run:
    types: [completed]
  schedule:
    - cron: '0 9 * * 1'  # 매주 월요일 한국시간 09:00

jobs:
  notify:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get context
        id: context
        run: |
          echo "Event=${{ github.event_name }}"    >> $GITHUB_OUTPUT
          echo "Ref=${{ github.ref }}"             >> $GITHUB_OUTPUT
          echo "Repo=${{ github.repository }}"     >> $GITHUB_OUTPUT
          echo "Actor=${{ github.actor }}"         >> $GITHUB_OUTPUT
          echo "Sha=${{ github.sha }}"             >> $GITHUB_OUTPUT
          echo "Action=${{ github.event.action }}" >> $GITHUB_OUTPUT
          TIMESTAMP=$(date '+%Y-%m-%d %H:%M')
          echo "Timestamp=$TIMESTAMP"              >> $GITHUB_OUTPUT

      - name: Get commit info (push only)
        id: commit
        if: ${{ github.event_name == 'push' }}
        run: |
          MSG=$(git log -1 --pretty=format:'%s')
          AUTHOR=$(git log -1 --pretty=format:'%an')
          echo "Msg=$MSG"                          >> $GITHUB_OUTPUT
          echo "CommitAuthor=$AUTHOR"             >> $GITHUB_OUTPUT
          echo "Url=https://github.com/${{ github.repository }}/commit/${{ github.sha }}" >> $GITHUB_OUTPUT
          FILES=$(git diff --stat HEAD~1 | tail -n1 | awk '{print $1}')
          INS=$(git diff --shortstat HEAD~1 | awk '{print $4}')
          DEL=$(git diff --shortstat HEAD~1 | awk '{print $6}')
          echo "Files=$FILES"                     >> $GITHUB_OUTPUT
          echo "Insertions=$INS"                  >> $GITHUB_OUTPUT
          echo "Deletions=$DEL"                   >> $GITHUB_OUTPUT

      - name: Get language stats (push only)
        id: lang
        if: ${{ github.event_name == 'push' }}
        run: |
          LANG_JSON=$(curl -s https://api.github.com/repos/${{ github.repository }}/languages)
          TOTAL=$(echo $LANG_JSON | jq 'add')
          STATS=$(echo $LANG_JSON | jq -r --arg total "$TOTAL" 'to_entries | map("\(.key): \((.value / ($total|tonumber) * 100) | round)%" ) | join(", ")')
          echo "LangStats=$STATS"                 >> $GITHUB_OUTPUT

      - name: Send Discord Notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          ALLOWED_MENTIONS: '{"parse":["roles","users"]}'
        run: |
          EVENT="${{ steps.context.outputs.Event }}"
          ACTOR="${{ steps.context.outputs.Actor }}"
          REPO="${{ steps.context.outputs.Repo }}"
          REF="${{ steps.context.outputs.Ref }}"
          ACTION="${{ steps.context.outputs.Action }}"
          TS="${{ steps.context.outputs.Timestamp }}"

          generate_payload() {
            jq -n \
              --argjson allowed "$ALLOWED_MENTIONS" \
              --arg title "$1" \
              --arg desc "$2" \
              --arg timestamp "$TS" \
              --argjson color "$3" \
              --arg thread "$4" '{
                embeds: [{
                  title: $title,
                  description: $desc,
                  color: $color,
                  timestamp: $timestamp
                }],
                allowed_mentions: $allowed,
                thread_name: $thread,
                thread_auto_archive_duration: 1440
              }' > payload.json
          }

          if [ "$EVENT" == "push" ]; then
            MSG="${{ steps.commit.outputs.Msg }}"
            AUTHOR="${{ steps.commit.outputs.CommitAuthor }}"
            URL="${{ steps.commit.outputs.Url }}"
            FILES="${{ steps.commit.outputs.Files }}"
            INS="${{ steps.commit.outputs.Insertions }}"
            DEL="${{ steps.commit.outputs.Deletions }}"
            LANGS="${{ steps.lang.outputs.LangStats }}"

            if [[ "$REF" == refs/tags/* ]]; then
              TAG="${REF#refs/tags/}"
              DESC=$'**'"$AUTHOR"'** released tag `'"$TAG"'`.\n[🔗 View Release](https://github.com/'"$REPO"'/releases/tag/'"$TAG"')\n\n언어 통계: '"$LANGS"
              COLOR=16753920
              THREAD="release-$TAG"
            else
              DESC=$'**'"$AUTHOR"'**가 **'"$REPO"'**에 커밋했습니다:\n['"$MSG"']('"$URL"')\nFiles: '"$FILES"', +'"$INS"'/-'"$DEL"' lines\n\n언어 통계: '"$LANGS"
              COLOR=5814783
              THREAD="push-${GITHUB_SHA}"
            fi

            generate_payload "📦 Push Event" "$DESC" $COLOR "$THREAD"

          elif [ "$EVENT" == "pull_request" ]; then
            # ... (기존 PR 핸들러 그대로)

          elif [ "$EVENT" == "release" ]; then
            # ... (기존 릴리즈 핸들러 그대로)

          # 이하 다른 이벤트 핸들러 생략 가능

          else
            exit 0
          fi

          curl -f -X POST -H "Content-Type: application/json" -d @payload.json "$DISCORD_WEBHOOK" || {
            echo "Webhook send failed, retrying..."
            sleep 5
            curl -f -X POST -H "Content-Type: application/json" -d @payload.json "$DISCORD_WEBHOOK"
          }
